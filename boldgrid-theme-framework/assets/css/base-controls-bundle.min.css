.directional-control {
  position: relative; }
  .directional-control .refresh svg {
    width: 19px;
    margin: 0 20px;
    position: absolute;
    transition: fill 0.25s; }
    .directional-control .refresh svg:hover {
      fill: #f95b26; }
  .directional-control .units {
    font-size: 12px;
    position: absolute;
    right: 28px;
    top: -10px;
    color: currentColor; }
    .directional-control .units label {
      margin: 4px;
      cursor: pointer; }
    .directional-control .units .unit {
      display: none; }
      .directional-control .units .unit:checked + span {
        color: #f95b26; }
  .directional-control .link {
    visibility: hidden;
    width: 20px;
    margin: 0 8px;
    transform: translateY(3px);
    transition: fill 0.5s;
    fill: #121212; }
    .directional-control .link.linked {
      fill: #f95b26; }
  .directional-control:not([data-linkable='false']) .slider-control:first-of-type .link {
    visibility: visible; }
  .directional-control .control-name {
    font-size: 15px;
    margin-bottom: 5px; }

.boldgrid-control.slider-control label {
  font-size: 13px;
  font-variant: small-caps; }

.boldgrid-control.slider-control .slider-wrap {
  display: flex; }

.boldgrid-control.slider-control .slider {
  width: 80%;
  margin: 10px 15px;
  height: 8px;
  border-radius: 0;
  background: #f1f1f1;
  cursor: pointer;
  border: 0;
  position: relative; }
  .boldgrid-control.slider-control .slider .ui-slider-handle {
    position: absolute;
    top: 50%;
    transform: translateY(-50%); }

.boldgrid-control.slider-control .number {
  width: 60px;
  border: 0;
  background: #f1f1f1;
  padding: 0 2px 0 15px;
  border-radius: 5px;
  text-align: center; }

.boldgrid-control .ui-slider-handle {
  border-radius: 50%;
  border: 5px solid #f7f7f7;
  background: #f95b26;
  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.28);
  width: 10px;
  height: 10px;
  cursor: pointer;
  transition: background 0.25s; }
  .boldgrid-control .ui-slider-handle.ui-state-focus {
    background-color: #121212; }

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use
 * $opacity-boost.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-value(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
.mdc-switch {
  display: inline-block;
  position: relative; }
  .mdc-switch__native-control {
    position: absolute;
    top: -14px;
    left: -14px;
    width: 48px;
    height: 48px;
    display: inline-block;
    margin-top: -3px;
    transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 0;
    cursor: pointer;
    z-index: 2; }
    .mdc-switch__native-control:checked {
      transform: translateX(14px); }

.mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background::before {
  background-color: #000; }

.mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background .mdc-switch__knob {
  background-color: #fafafa; }

.mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background .mdc-switch__knob::before {
  background-color: #9e9e9e; }

.mdc-switch__native-control:enabled:checked ~ .mdc-switch__background::before {
  background-color: #121212;
  /* @alternate */
  background-color: var(--mdc-theme-secondary, #121212); }

.mdc-switch__native-control:enabled:checked ~ .mdc-switch__background .mdc-switch__knob {
  background-color: #121212;
  /* @alternate */
  background-color: var(--mdc-theme-secondary, #121212); }

.mdc-switch__native-control:enabled:checked ~ .mdc-switch__background .mdc-switch__knob::before {
  background-color: #121212;
  /* @alternate */
  background-color: var(--mdc-theme-secondary, #121212); }

.mdc-switch__background {
  display: block;
  position: relative;
  width: 34px;
  height: 14px;
  border-radius: 50%;
  outline: none;
  user-select: none; }
  .mdc-switch__background::before {
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    transition: opacity 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: 7px;
    opacity: .38;
    content: ""; }

.mdc-switch__knob {
  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
  display: block;
  position: absolute;
  top: -3px;
  left: 0;
  width: 20px;
  height: 20px;
  transform: translateX(0);
  transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: 50%;
  z-index: 1; }
  .mdc-switch__knob::before {
    position: absolute;
    top: -14px;
    left: -14px;
    width: 48px;
    height: 48px;
    transform: scale(0);
    transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: 50%;
    opacity: .2;
    content: ""; }

.mdc-switch__native-control:focus ~ .mdc-switch__background .mdc-switch__knob::before {
  transform: scale(1); }

.mdc-switch__native-control:checked ~ .mdc-switch__background::before {
  opacity: .5; }

.mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob {
  transform: translateX(14px); }
  .mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob::before {
    opacity: .15; }

.mdc-switch__native-control:disabled {
  cursor: initial; }

.mdc-switch__native-control:disabled ~ .mdc-switch__background::before {
  background-color: #000;
  opacity: .12; }

.mdc-switch__native-control:disabled ~ .mdc-switch__background .mdc-switch__knob {
  background-color: #bdbdbd; }

.bg-control-switch {
  margin: 10px 0; }
  .bg-control-switch label {
    cursor: pointer; }

.bg-control-switch.boldgrid-control input {
  width: 48px;
  height: 48px;
  display: inline-block;
  margin-top: -3px;
  transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer; }

.bg-color-picker-control {
  padding: 10px 0; }
  .bg-color-picker-control input,
  .bg-color-picker-control .iris-picker {
    display: block;
    margin: 10px auto; }

.box-shadow-control {
  margin-bottom: 20px; }

.box-shadow-outline-switch {
  font-size: 14px;
  user-select: none; }

.border-width-control {
  display: none; }

.border-type-control {
  margin-bottom: 30px; }
  .border-type-control .control-title {
    font-size: 15px; }
  .border-type-control ul {
    list-style: none;
    padding-left: 5px;
    font-size: 15px; }
    .border-type-control ul li {
      margin: 6px 0; }
      .border-type-control ul li label {
        cursor: pointer;
        position: relative;
        display: block; }
        .border-type-control ul li label input::after {
          content: '';
          max-width: 100px;
          border-top: 4px dashed black;
          position: absolute;
          right: 40px;
          width: 33%;
          top: 6px;
          border-bottom: transparent;
          border-left: transparent;
          border-right: transparent; }
        .border-type-control ul li label input[value='solid']::after {
          border-style: solid; }
        .border-type-control ul li label input[value='dotted']::after {
          border-style: dotted; }
        .border-type-control ul li label input[value='double']::after {
          border-style: double; }
        .border-type-control ul li label input[value='']::after {
          border-color: transparent; }
      .border-type-control ul li input {
        margin: 0 7px; }

.boldgrid-control input {
  width: 16px; }

.boldgrid-control.slider-control .number,
.boldgrid-control.slider-control .slider {
  background-color: white; }

.boldgrid-control.slider-control .slider .ui-slider-handle {
  transform: translateY(-50%) translateX(-50%); }

.boldgrid-control .pluto-color-control + .iris-picker {
  min-width: 280px; }

.bg-control-switch.boldgrid-control .mdc-switch {
  top: 5px; }

