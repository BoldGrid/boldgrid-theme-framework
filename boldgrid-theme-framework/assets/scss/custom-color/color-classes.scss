/**
 * Text Contrast
 * Compares contrast of a given color to the light/dark arguments and returns whichever is most "contrasty"
 */
@function text-contrast( $color ) {
	@if $color == null {
		@return null;
	}
	@else {
		$color-brightness: brightness($color);
		$light-text-brightness: brightness($light_text);
		$dark-text-brightness: brightness($dark_text);

		@if (abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness)) {
			@return $light_text;
		} @else {
			@return $dark_text;
		}
	}
}
@function brightness($color) {
	@return ((red($color) * .299) + (green($color) * .587) + (blue($color) * .114)) / 255 * 100%;
}

@if variable-exists( palette-primary_1 ) {
	$text-contrast-palette-primary_1: text-contrast( $palette-primary_1 );
	.color-1-text-contrast { color: $text-contrast-palette-primary_1 ! important; }
}
@if variable-exists( palette-primary_2 ) {
	$text-contrast-palette-primary_2: text-contrast( $palette-primary_2 );
	.color-2-text-contrast { color: $text-contrast-palette-primary_2 ! important; }
}
@if variable-exists( palette-primary_3 ) {
	$text-contrast-palette-primary_3: text-contrast( $palette-primary_3 );
	.color-3-text-contrast { color: $text-contrast-palette-primary_3 ! important; }
}
@if variable-exists( palette-primary_4 ) {
	$text-contrast-palette-primary_4: text-contrast( $palette-primary_4 );
	.color-4-text-contrast { color: $text-contrast-palette-primary_4 ! important; }
}
@if variable-exists( palette-primary_5 ) {
	$text-contrast-palette-primary_5: text-contrast( $palette-primary_5 );
	.color-5-text-contrast { color: $text-contrast-palette-primary_5 ! important; }
}
@if variable-exists( palette-primary-neutral-color ) {
	$text-contrast-palette-primary-neutral-color: text-contrast( $palette-primary-neutral-color );
	.color-neutral-text-contrast { color: $text-contrast-palette-primary-neutral-color ! important; }
}

/*create single css classes to apply palettes on universal elements*/
$names: color background background-color border;
@for $i from 1 through length( $names ) {
	@for $color from 1 through length( $colors ) {
		.color#{$color}-#{nth( $names, $i )} { #{nth( $names, $i )}: #{nth($colors, $color)} ! important; }
		.color#{$color}-#{nth($names, $i)}-hover:hover { #{nth( $names, $i )}: #{nth($colors, $color)} ! important; }
	}
}
/*
* Base Colors
*
* Create colors for buttons
* (.button-primary, .button-secondary, etc.)
*/
@each $ubtn-color in $ubtn-colors {
  $ubtn-name: nth($ubtn-color, 1);
  $ubtn-background: nth($ubtn-color, 2);
  $ubtn-color: nth($ubtn-color, 3);

  // Crete class for .button-primary
  // and legacy flat .button-primary-flat
  .btn-#{$ubtn-name},
  .btn-#{$ubtn-name}-flat {
    background-color: $ubtn-background;
    border-color: $ubtn-background;
    color: $ubtn-color;

    &:visited {
      color: $ubtn-color;
    }

    &:hover,
    &:focus {
      background-color: lighten($ubtn-background, 10%);
      border-color: lighten($ubtn-background, 10%);
      color: $ubtn-color;
    }

    &:active,
    &.active,
    &.is-active {
      background-color: desaturate($ubtn-background, 10%);
      border-color: desaturate($ubtn-background, 10%);
      color: darken($ubtn-background, 10%);
    }
  }
}
/*
* 3D Button Colors
*
* Create colors for buttons
* (.button-primary, .button-secondary, etc.)
*/
.btn-3d {
	@each $ubtn-color in $ubtn-colors {
		$ubtn-name: nth($ubtn-color, 1);
		$ubtn-background: nth($ubtn-color, 2);
		$ubtn-color: nth($ubtn-color, 3);
		$ubtn-color-namespace: '.btn-' + $ubtn-name;
		// .button-border-primary .button-border-action etc.
		&#{$ubtn-color-namespace} {
			box-shadow: 0 7px 0 darken($ubtn-background, 10%), 0 8px 3px rgba(0, 0, 0, .30);
			&:hover, &:focus {
				box-shadow: 0 7px 0 darken($ubtn-background, 12%), 0 8px 3px rgba(0, 0, 0, .30);
			}
			&:active, &.active, &.is-active {
				box-shadow: 0 2px 0 darken($ubtn-background, 20%), 0 3px 3px rgba(0, 0, 0, .2);
			}
		}
	}
}

@if variable-exists( button-primary-classes ) {
	.button-primary {
		@extend #{$button-primary-classes} !optional;
	}
}

@if variable-exists( button-secondary-classes ) {
	.button-secondary {
		@extend #{$button-secondary-classes} !optional;
	}
}
