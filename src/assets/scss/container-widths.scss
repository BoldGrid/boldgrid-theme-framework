$col-sizes: (
	'1': 0.0833333,
	'2': 0.166667,
	'3': 0.25,
	'4': 0.3333333,
	'5': 0.4166667,
	'6': 0.5,
	'7': 0.5833333,
	'8': 0.6666667,
	'9': 0.75,
	'10': 0.8333333,
	'11': 0.9166667,
	'12': 1
);

$container-widths: (
	'pages-mw-large': $pages-mw-large,
	'pages-mw-desktop': $pages-mw-desktop,
	'pages-mw-tablet': $pages-mw-tablet,
	'blog-posts-mw-large': $blog-posts-mw-large,
	'blog-posts-mw-desktop': $blog-posts-mw-desktop,
	'blog-posts-mw-tablet': $blog-posts-mw-tablet,
	'blog-page-mw-large': $blog-page-mw-large,
	'blog-page-mw-desktop': $blog-page-mw-desktop,
	'blog-page-mw-tablet': $blog-page-mw-tablet,
);

@mixin boldgrid-section( $col-prefix, $max-width ) {
	.boldgrid-section {
		> .container-fluid {
			max-width: $max-width;
		}
		> .full-width {
			max-width: $max-width;
		}
		@include full-width-rows( $col-prefix, $max-width );
	}
}

@mixin page-title-header( $max-width ) {
	.page-header-wrapper.full-width .featured-imgage-header:not( .container ) {
		max-width: $max-width;
	}
}

@mixin full-width-rows( $col-type, $max-width ) {
	> .container-fluid, > .full-width {
		.row.full-width-row {
			@each $col-num, $col-size in $col-sizes {
				$num-of-cols: calc( 12 / #{$col-num} );
				$num-of-inner-cols: calc( #{$num-of-cols} - 2 );
				$inner-col-width: calc( #{$max-width} * #{$col-size} );
				$total-width-of-inner-cols: calc( #{$inner-col-width} * #{$num-of-inner-cols} );
				.col-#{$col-type}-#{$col-num}:not( :first-of-type ):not( :last-of-type ) {
					width: calc( #{$max-width} * #{$col-size} );
					max-width: calc( ( 100vw * #{$col-size} ) - 5px);
				}
				.col-#{$col-type}-#{$col-num}:first-of-type,
				.col-#{$col-type}-#{$col-num}:last-of-type {
					width: calc( ( 100vw - #{$total-width-of-inner-cols} ) / 2 );
					.fwr-left, .fwr-right {
						width: calc( #{$max-width} * #{$col-size} );
						max-width: calc( ( 100vw * #{$col-size} ) - 5px);
					}
				}
			}
		}
	}
}

@mixin page( $class, $page-post-type, $device-type, $col-prefix ) {
	@if map-has-key( $container-widths, #{#{$page-post-type}-mw-#{$device-type}} ) {
		$max-width: map-get($container-widths, #{#{$page-post-type}-mw-#{$device-type}} );
		@if 'unset' != $max-width {
			#{$class} {
				&[data-mw-#{$device-type}="#{$max-width}"] {
					@include boldgrid-section( $col-prefix, $max-width );
					@include page-title-header( $max-width );
					@include post-comments-navigation( $max-width );
				}
			}
			@if 'blog-page' == $page-post-type {
				@include blog-search-archive( $device-type, $max-width );
			}
		}
	}
}

@mixin post-comments-navigation( $max-width ) {
	nav.navigation, #comments {
		max-width: $max-width;
		margin-left: auto;
		margin-right: auto;
	}
}

@mixin blog-search-archive( $device-type, $max-width ) {
	&[data-mw-#{$device-type}="#{$max-width}"] {
		&.search{
			#main-wrapper.full-width.max-full-width .main {
				max-width: $max-width;
			}
		}
		&.archive, &.blog {
			#main-wrapper.full-width.max-full-width {
				max-width: $max-width;
			}
		}
	}
}

@media only screen and (min-width: 1200px) {
	body[data-container="max-full-width"] {
		@include page( '&.page', 'pages', 'large', 'lg' );
		// @include page( '&.single', 'blog-posts', 'large', 'lg' );
		// @include page( '&.archive, &.blog, &.search', 'blog-page', 'large', 'lg' );
	}
}
@media only screen and (max-width: 1199px) and (min-width: 992px) {
	body[data-container="max-full-width"] {
		@include page( '&.page', 'pages', 'desktop', 'md' );
		// @include page( '&.single', 'blog-posts', 'desktop', 'md' );
		// @include page( '&.archive, &.blog, &.search', 'blog-page', 'desktop', 'md' );
	}
}
@media only screen and (max-width: 991px) and (min-width: 768px) {
	body[data-container="max-full-width"] {
		@include page( '&.page', 'pages', 'tablet', 'sm' );
	// 	@include page( '&.single', 'blog-posts', 'tablet', 'sm' );
	// 	@include page( '&.archive, &.blog, &.search', 'blog-page', 'tablet', 'sm' );
	}
}
